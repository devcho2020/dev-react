{  
  "compilerOptions": {
    "baseUrl": "src",  // 'src' 디렉토리를 기본 경로로 설정
    "paths": {
      "@/*": ["*"],
      "@assets/*": ["assets/*"],
      "@components/*": ["components/*"],
      "@context/*": ["context/*"],
      "@hooks/*": ["hooks/*"],
      "@images/*": ["images/*"],
      "@store/*": ["store/*"],
      "@styles/*": ["styles/*"],
      "@utils/*": ["utils/*"]
    },
    "strict": true,  // TypeScript의 엄격한 검사 활성화
    "jsx": "react-jsx",  // React 17 이상 JSX 변환 방식을 사용
    // 출력할 ECMAScript의 버전 지정 (ES2020으로 설정)
    "target": "ES2020",

    // 모듈 시스템을 ESNext로 설정
    "module": "ESNext",

    // 사용할 라이브러리 추가 (ES2020, DOM, DOM.Iterable)
    "lib": ["ES2020", "DOM", "DOM.Iterable"],

    // TypeScript의 모든 엄격한 타입 검사를 활성화 (가장 중요한 설정)
    "strict": true,

    // 사용되지 않는 로컬 변수에 대해 오류 발생
    "noUnusedLocals": true,

    // 사용되지 않는 함수의 매개변수에 대해 오류 발생
    "noUnusedParameters": true,

    // null과 undefined를 안전하게 처리하도록 강제
    "strictNullChecks": true,

    // CommonJS 모듈을 ES 모듈처럼 `import`할 수 있도록 호환성 활성화
    "esModuleInterop": true,

    // 외부 라이브러리 타입 검사 건너뛰기 (타입 정의가 불완전한 경우 유용)
    "skipLibCheck": true,

    // .json 파일을 `import`할 수 있도록 허용
    "resolveJsonModule": true,

    // JS 파일을 TypeScript 프로젝트에서 사용할 수 있도록 허용
    "allowJs": true,

    // 파일 이름 대소문자 구분 강제
    "forceConsistentCasingInFileNames": true,

    // 증분 빌드를 사용하여 이전 빌드와의 차이만 다시 컴파일
    "incremental": true,

    // 모듈 해석 방법을 bundler로 설정 (웹팩, Vite 등에서 주로 사용)
    "moduleResolution": "bundler",

    // TypeScript의 JSX 처리 방식 설정
    "jsx": "react-jsx",

    // 추가적인 설정 (예시: `allowImportingTsExtensions`)
    "allowImportingTsExtensions": true
  },
  "include": ["src/**/*.ts", "src/**/*.tsx"],  // TypeScript 파일 포함
  "exclude": ["node_modules"],  // 제외할 디렉토리

  "strict": true
}
